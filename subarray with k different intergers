class Solution {
public:
    // finding number of subarray having different interger less or eqal to k
    int less_or_eqaul_to_k(vector<int>&nums,int k){
        int l=0,r=0,ans=0;
        unordered_map<int,int>umap;
        while(r<nums.size()){
             umap[nums[r]]++;
             while(umap.size()>k){
                  umap[nums[l]]--;
                  if(umap[nums[l]]==0){
                    umap.erase(nums[l]);
                  }
                  l++;
             }
             ans+=(r-l+1);
             r++;
        }
        return ans;
    }
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        int at_most_k=less_or_eqaul_to_k(nums,k);
        int at_most_k_1=less_or_eqaul_to_k(nums,k-1);
        return abs(at_most_k-at_most_k_1);
    }
};
